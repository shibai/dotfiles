alias ssha='echo -e "\033]50;SetProfile=Solarized Dark\a";ssh dev-cloud;echo -e "\033]50;SetProfile=\a";'
alias sshpi='echo -e "\033]50;SetProfile=Solarized Light\a";ssh pi;echo -e "\033]50;SetProfile=\a";'
alias sts='open build/brazil-unit-tests/index.html'
alias stis='open build/brazil-integ-tests/index.html'
alias chks='open build/brazil-documentation/checkstyle/checkstyle_report.html'
alias fbgs='open build/brazil-documentation/findbugs/findbugs_report.html'
alias post-review='post-review --target-group=avcp-taps -o'

export PATH="/apollo/env/ruby193/bin:/apollo/env/SDETools/bin:/usr/local/bin:$PATH:/Users/shibaili/bin:/Users/shibaili/development/sbt/bin"

export ORACLE_VERSION=11.2.2
export ORACLE_HOME="/Users/shibaili/Development/oracle/instantclient_11_2_2"
export DYLD_LIBRARY_PATH=$ORACLE_HOME
export LD_LIBRARY_PATH=$ORACLE_HOME
export JAVA_HOME=`/usr/libexec/java_home`
eval "$(docker-machine env default)"

# http://stackoverflow.com/a/5257398
DAY_OF_WEEK=$(date '+%u')
if [ $DAY_OF_WEEK -lt 1 ] || [ $DAY_OF_WEEK -gt 5 ]
then
    cd ~/Code
else
    HOUR=$(date '+%H')
    if [ $HOUR -lt 9 ] || [ $HOUR -gt 17 ]
    then
        cd ~/Code
    else
        cd /localWorkspace
    fi
fi

function pat { #pushAndTest
  currentBranchName=$(git symbolic-ref HEAD 2>/dev/null | perl -pe 's:refs/heads/(.*):$1:')
  if [[ -z $currentBranchName ]] {
    echo "Can't do nothing if you're not on a branch, champ"
    return
  }

  upstreamInfo=$(git rev-parse --symbolic-full-name --abbrev-ref @{u})
  upstreamArray=("${(@s:/:)upstreamInfo}")
  upstreamRepoName=${upstreamArray[1]}
  upstreamBranchName=${upstreamArray[2]} #Used for checking that the upstream repo has the correct branch checked out

  if [[ -z $upstreamRepoName ]] {
    echo "We seek the upstream.\nBut it is undetermined.\nRefrigerator."
    return
  }
  if [[ $upstreamRepoName == "origin" ]] {
    echo "Woah there, sparky! You're trying to use this function on a branch tracking origin. You probably don't want to do that."
    return;
  }

  git commit -a --amend --no-edit # "Squash" your changes into the latest commit
  git push -f # Really really push. For realsies.
  remoteUrl=$(git config --get remote.$upstreamRepoName.url | perl -pe 's/^.*?:\/\/(.*)/$1/') # Sometimes git will prepend "ssh://" to remote urls. Sometimes it won't. How exciting!
  remoteUrlArray=("${(@s/:/)remoteUrl}") # Split the remoteUrl into host and path

  portNumber=$1
  if [[ -z $portNumber ]] {
    portNumber="1729" # it is a very interesting number
  }
  ssh -t ${remoteUrlArray[1]} "cd ${remoteUrlArray[2]}; actualCheckedBranch=\$(git symbolic-ref HEAD 2>/dev/null | perl -pe 's:refs/heads/::'); if [[ ! \$actualCheckedBranch == $upstreamBranchName ]] { echo \"Repo has wrong branch checked out, found '\$actualCheckedBranch' but expected '$upstreamBranchName'. Dying horribly\"} else { git reset --hard HEAD; brazil-build test || (cd build/brazil-unit-tests; python -m SimpleHTTPServer $portNumber)}"
}

function gnb() { #Git new-branch
  git fetch dev;
  git checkout --track dev/$1
} 


source ~/.env/zshrc
